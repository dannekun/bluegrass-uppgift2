//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.05.18 at 04:06:29 PM CEST 
//


package com.example.bluegrass.bluegrass.uppgift.classes;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDateTime;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Reading" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="StationId" type="{http://www.w3.org/2001/XMLSchema}integer"/>
 *                   &lt;element name="StationName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="Timestamp" type="{http://www.w3.org/2001/XMLSchema}dateTime"/>
 *                   &lt;element name="Parameter" maxOccurs="3">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="Name">
 *                               &lt;simpleType>
 *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                   &lt;enumeration value="Temp"/>
 *                                   &lt;enumeration value="WindDirection"/>
 *                                   &lt;enumeration value="WindSpeed"/>
 *                                 &lt;/restriction>
 *                               &lt;/simpleType>
 *                             &lt;/element>
 *                             &lt;element name="Value" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "reading"
})
@XmlRootElement(name = "WeatherData")
@Entity(name = "WeatherData")
@Table(name = "WEATHERDATA")
@Inheritance(strategy = InheritanceType.JOINED)
public class WeatherData
    implements Equals, HashCode
{

    @XmlElement(name = "Reading")
    protected List<WeatherData.Reading> reading;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the reading property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reading property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReading().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WeatherData.Reading }
     * 
     * 
     */
    @OneToMany(targetEntity = WeatherData.Reading.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "READING_WEATHERDATA_HJID")
    public List<WeatherData.Reading> getReading() {
        if (reading == null) {
            reading = new ArrayList<WeatherData.Reading>();
        }
        return this.reading;
    }

    /**
     * 
     * 
     */
    public void setReading(List<WeatherData.Reading> reading) {
        this.reading = reading;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof WeatherData)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final WeatherData that = ((WeatherData) object);
        {
            List<WeatherData.Reading> lhsReading;
            lhsReading = (((this.reading!= null)&&(!this.reading.isEmpty()))?this.getReading():null);
            List<WeatherData.Reading> rhsReading;
            rhsReading = (((that.reading!= null)&&(!that.reading.isEmpty()))?that.getReading():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reading", lhsReading), LocatorUtils.property(thatLocator, "reading", rhsReading), lhsReading, rhsReading)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<WeatherData.Reading> theReading;
            theReading = (((this.reading!= null)&&(!this.reading.isEmpty()))?this.getReading():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reading", theReading), currentHashCode, theReading);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="StationId" type="{http://www.w3.org/2001/XMLSchema}integer"/>
     *         &lt;element name="StationName" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="Timestamp" type="{http://www.w3.org/2001/XMLSchema}dateTime"/>
     *         &lt;element name="Parameter" maxOccurs="3">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="Name">
     *                     &lt;simpleType>
     *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                         &lt;enumeration value="Temp"/>
     *                         &lt;enumeration value="WindDirection"/>
     *                         &lt;enumeration value="WindSpeed"/>
     *                       &lt;/restriction>
     *                     &lt;/simpleType>
     *                   &lt;/element>
     *                   &lt;element name="Value" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "stationId",
        "stationName",
        "timestamp",
        "parameter"
    })
    @Entity(name = "WeatherData$Reading")
    @Table(name = "READING")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class Reading
        implements Equals, HashCode
    {

        @XmlElement(name = "StationId", required = true)
        protected BigInteger stationId;
        @XmlElement(name = "StationName", required = true)
        protected String stationName;
        @XmlElement(name = "Timestamp", required = true)
        @XmlSchemaType(name = "dateTime")
        protected XMLGregorianCalendar timestamp;
        @XmlElement(name = "Parameter", required = true)
        protected List<WeatherData.Reading.Parameter> parameter;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;

        /**
         * Gets the value of the stationId property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        @Basic
        @Column(name = "STATIONID", precision = 20, scale = 0)
        public BigInteger getStationId() {
            return stationId;
        }

        /**
         * Sets the value of the stationId property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setStationId(BigInteger value) {
            this.stationId = value;
        }

        /**
         * Gets the value of the stationName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "STATIONNAME", length = 255)
        public String getStationName() {
            return stationName;
        }

        /**
         * Sets the value of the stationName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setStationName(String value) {
            this.stationName = value;
        }

        /**
         * Gets the value of the timestamp property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        @Transient
        public XMLGregorianCalendar getTimestamp() {
            return timestamp;
        }

        /**
         * Sets the value of the timestamp property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setTimestamp(XMLGregorianCalendar value) {
            this.timestamp = value;
        }

        /**
         * Gets the value of the parameter property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the parameter property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getParameter().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link WeatherData.Reading.Parameter }
         * 
         * 
         */
        @OneToMany(targetEntity = WeatherData.Reading.Parameter.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "PARAMETER__READING_HJID")
        public List<WeatherData.Reading.Parameter> getParameter() {
            if (parameter == null) {
                parameter = new ArrayList<WeatherData.Reading.Parameter>();
            }
            return this.parameter;
        }

        /**
         * 
         * 
         */
        public void setParameter(List<WeatherData.Reading.Parameter> parameter) {
            this.parameter = parameter;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        @Basic
        @Column(name = "TIMESTAMPITEM")
        @Temporal(TemporalType.TIMESTAMP)
        public Date getTimestampItem() {
            return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDateTime.class, this.getTimestamp());
        }

        public void setTimestampItem(Date target) {
            setTimestamp(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDateTime.class, target));
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof WeatherData.Reading)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final WeatherData.Reading that = ((WeatherData.Reading) object);
            {
                BigInteger lhsStationId;
                lhsStationId = this.getStationId();
                BigInteger rhsStationId;
                rhsStationId = that.getStationId();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "stationId", lhsStationId), LocatorUtils.property(thatLocator, "stationId", rhsStationId), lhsStationId, rhsStationId)) {
                    return false;
                }
            }
            {
                String lhsStationName;
                lhsStationName = this.getStationName();
                String rhsStationName;
                rhsStationName = that.getStationName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "stationName", lhsStationName), LocatorUtils.property(thatLocator, "stationName", rhsStationName), lhsStationName, rhsStationName)) {
                    return false;
                }
            }
            {
                XMLGregorianCalendar lhsTimestamp;
                lhsTimestamp = this.getTimestamp();
                XMLGregorianCalendar rhsTimestamp;
                rhsTimestamp = that.getTimestamp();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "timestamp", lhsTimestamp), LocatorUtils.property(thatLocator, "timestamp", rhsTimestamp), lhsTimestamp, rhsTimestamp)) {
                    return false;
                }
            }
            {
                List<WeatherData.Reading.Parameter> lhsParameter;
                lhsParameter = (((this.parameter!= null)&&(!this.parameter.isEmpty()))?this.getParameter():null);
                List<WeatherData.Reading.Parameter> rhsParameter;
                rhsParameter = (((that.parameter!= null)&&(!that.parameter.isEmpty()))?that.getParameter():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "parameter", lhsParameter), LocatorUtils.property(thatLocator, "parameter", rhsParameter), lhsParameter, rhsParameter)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                BigInteger theStationId;
                theStationId = this.getStationId();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stationId", theStationId), currentHashCode, theStationId);
            }
            {
                String theStationName;
                theStationName = this.getStationName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stationName", theStationName), currentHashCode, theStationName);
            }
            {
                XMLGregorianCalendar theTimestamp;
                theTimestamp = this.getTimestamp();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timestamp", theTimestamp), currentHashCode, theTimestamp);
            }
            {
                List<WeatherData.Reading.Parameter> theParameter;
                theParameter = (((this.parameter!= null)&&(!this.parameter.isEmpty()))?this.getParameter():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parameter", theParameter), currentHashCode, theParameter);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="Name">
         *           &lt;simpleType>
         *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *               &lt;enumeration value="Temp"/>
         *               &lt;enumeration value="WindDirection"/>
         *               &lt;enumeration value="WindSpeed"/>
         *             &lt;/restriction>
         *           &lt;/simpleType>
         *         &lt;/element>
         *         &lt;element name="Value" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "name",
            "value"
        })
        @Entity(name = "WeatherData$Reading$Parameter")
        @Table(name = "PARAMETER_")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class Parameter
            implements Equals, HashCode
        {

            @XmlElement(name = "Name", required = true)
            protected String name;
            @XmlElement(name = "Value", required = true)
            protected String value;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;

            /**
             * Gets the value of the name property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "NAME_")
            public String getName() {
                return name;
            }

            /**
             * Sets the value of the name property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setName(String value) {
                this.name = value;
            }

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "VALUE_", length = 255)
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof WeatherData.Reading.Parameter)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final WeatherData.Reading.Parameter that = ((WeatherData.Reading.Parameter) object);
                {
                    String lhsName;
                    lhsName = this.getName();
                    String rhsName;
                    rhsName = that.getName();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                        return false;
                    }
                }
                {
                    String lhsValue;
                    lhsValue = this.getValue();
                    String rhsValue;
                    rhsValue = that.getValue();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theName;
                    theName = this.getName();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
                }
                {
                    String theValue;
                    theValue = this.getValue();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }

    }

}
